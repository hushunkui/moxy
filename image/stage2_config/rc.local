#!/bin/sh

# Try to setup networking.
echo "Configuring network..."
ping -c 1 www.google.com || (
    echo "KERNEL COMMAND LINE:"
    cat /proc/cmdline
    echo "^^^^^^^^^^^^^^^^^^^"
    IPCFG=$( cat /proc/cmdline | tr ' ' '\n' | grep -E 'ip=|epoxy.ip=' | sed -e 's/epoxy.ip=//g' | sed -e 's/ip=//g' )
    if test -n "$IPCFG" ; then
        echo "Using IP configuration: $IPCFG"
        echo $IPCFG | tr ':' ' ' | ( read IP GW NM HN DEV _
            ifconfig $DEV $IP netmask $NM
            route add default gw $GW
            hostname $HN
        )
    else
        echo "Using default IP configuration."
        ifconfig eth0 192.168.0.107 netmask 255.255.255.0
        route add default gw 192.168.0.1
    fi
    ifconfig eth0
)


echo "Starting syslog..."
syslogd


# We generate RSA since this is considered solid. But, RSA depends on a good
# RNG, which may be weaker at first boot. DSA and ECDSA are considered suspect.
# ED25519 is preferable but not supported by dropbear.
/bin/dropbearkey -t rsa -s 4096 -f /etc/dropbear/dropbear_rsa_host_key
/bin/dropbearkey -y -f /etc/dropbear/dropbear_rsa_host_key | grep rsa > /etc/dropbear/dropbear_rsa_host_key.pub

# TODO: publish ssh key.
# epoxyget --public_ssh_host_key=/etc/dropbear/dropbear_rsa_host_key.pub


echo "Starting dropbear..."
# The "-g" option disables root login with password.
dropbear -g


# Run epoxy-get using arg from cmdline.
# nextboot=$(cat /proc/cmdline)
# nextboot="${nextboot##*epoxy.nextboot=}"
# nextboot="${nextboot%% *}"
# if test -n "$nextboot" ; then
    # echo epoxyget --post --url $nextboot
    # epoxyget --post --url $nextboot
echo "STARTING NEXTSTAGE..."
echo epoxyget --nextstage
epoxy-get --nextstage
# fi
